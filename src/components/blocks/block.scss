$cube-color--front-base: rgb(23, 64, 93);
$cube-color--top-base: rgb(1, 108, 164);
$cube-color--side-base: rgb(0, 44, 60);

.container {
    display: inline-block;
    height: 115px;
    position: relative;
    width: 145px; // If changed, make sure to change BLOCK_WIDTH in block.js
}

/*
 * Side faces.
 *
 * The top and right side are transformed through rotations and skews to achieve the desired 3d
 * effect. Their transform values were magically determined through this process: http://imgur.com/gallery/Q3cUg29.
 */
.face {
    height: 100%;
    position: absolute;
    width: 100%;
}

.front {
    composes: face;

    background-color: $cube-color--front-base;
}

.top {
    composes: face;
    composes: transform-fix from '../../styles/utils.scss';

    background-color: $cube-color--top-base;
    transform: translateX(31.1px)
               translateY(-85.8px)
               rotateX(60.5deg)
               skewX(-28.3deg);
}

.side {
    composes: face;
    composes: transform-fix from '../../styles/utils.scss';

    background-color: $cube-color--side-base;
    transform: translateX(103.3px)
               translateY(-28.3px)
               rotateY(64.7deg)
               skewY(-21.2deg);
}

/*
 * Cube shadow
 */
.container:before {
    backface-visibility: hidden;
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    transform: translateX(188px)
               translateY(19.6px)
               rotateX(49deg)
               skewX(-73deg);
    width: 100%;
    z-index: -1; /* Necessary for Safari to create correct stacking contexts */

    /**
     * There seems to be significant problems with rendering these cube transforms in some browsers.
     * Safari, for example, doesn't like any of this at all and produces really weird rendering
     * issues when this shadow is there (but also doesn't like it when the shadow isn't).
     *
     * Because of these issues, we've left this pseudo element around without any visible styling
     * as it seems to help render the actual cubes for some of these broken browsers, but in the
     * browsers that support it, we add the background styling to show the shadow.
     *
     * FIXME: Test with IE/Edge
     */
    :global(.chrome) &,
    :global(.firefox) & {
        background-color: rgba(0, 0, 0, 0.5); /*FIXME*/
    }

    /**
     * For some versions of chrome, the backface-visibility trick doesn't seem to smooth the jagged
     * edges, but adding an outline makes it better
     */
    :global(.chrome) & {
        outline: 1px solid rgba(0, 0, 0, 0.5); /*FIXME*/
    }
}
